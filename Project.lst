Microsoft (R) Macro Assembler Version 14.29.30140.0	    04/05/22 07:46:36
graphics.asm						     Page 1 - 1


				; graphics.asm - module for all graphics
				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 
				INCLUDE logic.inc
			      C ;// value for words
			      C EXTERNDEF wordlist:BYTE
			      C 
			      C ;// functions for logic
			      C SelectRandomWord PROTO ;// outputs pointer to random word in wordlist to act as word chooser
			      C CharInWord PROTO, Char: BYTE, WordCheck: DWORD ;// check if letter is in word
			      C CharInSamePos PROTO, word1: BYTE, word2: BYTE ;// check if letter in same spot
			      C 
			      C OPTION PROC:PRIVATE
			      C 
				INCLUDE graphics.inc
			      C 
			      C 
			      C 
			      C ; wod = word of day
			      C ; iterate through the word and for each char return 
			      C CheckWord PROTO, current_word: DWORD, wod: DWORD
			      C 
			      C ; Takes in the result of a character and the character itself
			      C ; color_bg is 0 for not in word, 1 for in word, and 2 for in correct position and in word
			      C DisplayChar PROTO, color_bg: BYTE, char: BYTE
			      C 
			      C 
			      C 
			      C ; Changes the background and sets the cursor to the right position also creates a box and ascii art
			      C SetDisplay PROTO
			      C ; ASCII art with results and title screen
			      C Winner PROTO
			      C Loser PROTO, wod: DWORD
			      C Wordle PROTO
			      C 
			      C OPTION PROC:PRIVATE
			      C 

				ExitProcess PROTO, dwExitCode: DWORD

 00000000			.data

 00000000 24 24 5C 20 20	winners BYTE "$$\     $$\                                                           ", 0
	   20 20 20 24 24
	   5C 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   00
 00000047 5C 24 24 5C 20	winner1 BYTE "\$$\   $$  |                                                          ", 0
	   20 20 24 24 20
	   20 7C 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   00
 0000008E 20 5C 24 24 5C	winner2 BYTE " \$$\ $$  /$$$$$$\  $$\   $$\       $$\  $$\  $$\  $$$$$$\  $$$$$$$\  ", 0
	   20 24 24 20 20
	   2F 24 24 24 24
	   24 24 5C 20 20
	   24 24 5C 20 20
	   20 24 24 5C 20
	   20 20 20 20 20
	   20 24 24 5C 20
	   20 24 24 5C 20
	   20 24 24 5C 20
	   20 24 24 24 24
	   24 24 5C 20 20
	   24 24 24 24 24
	   24 24 5C 20 20
	   00
 000000D5 20 20 5C 24 24	winner3 BYTE "  \$$$$  /$$  __$$\ $$ |  $$ |      $$ | $$ | $$ |$$  __$$\ $$  __$$\ ", 0
	   24 24 20 20 2F
	   24 24 20 20 5F
	   5F 24 24 5C 20
	   24 24 20 7C 20
	   20 24 24 20 7C
	   20 20 20 20 20
	   20 24 24 20 7C
	   20 24 24 20 7C
	   20 24 24 20 7C
	   24 24 20 20 5F
	   5F 24 24 5C 20
	   24 24 20 20 5F
	   5F 24 24 5C 20
	   00
 0000011C 20 20 20 5C 24	winner4 BYTE "   \$$  / $$ /  $$ |$$ |  $$ |      $$ | $$ | $$ |$$ /  $$ |$$ |  $$ |", 0
	   24 20 20 2F 20
	   24 24 20 2F 20
	   20 24 24 20 7C
	   24 24 20 7C 20
	   20 24 24 20 7C
	   20 20 20 20 20
	   20 24 24 20 7C
	   20 24 24 20 7C
	   20 24 24 20 7C
	   24 24 20 2F 20
	   20 24 24 20 7C
	   24 24 20 7C 20
	   20 24 24 20 7C
	   00
 00000163 20 20 20 20 24	winner5 BYTE "    $$ |  $$ |  $$ |$$ |  $$ |      $$ | $$ | $$ |$$ |  $$ |$$ |  $$ |", 0
	   24 20 7C 20 20
	   24 24 20 7C 20
	   20 24 24 20 7C
	   24 24 20 7C 20
	   20 24 24 20 7C
	   20 20 20 20 20
	   20 24 24 20 7C
	   20 24 24 20 7C
	   20 24 24 20 7C
	   24 24 20 7C 20
	   20 24 24 20 7C
	   24 24 20 7C 20
	   20 24 24 20 7C
	   00
 000001AA 20 20 20 20 24	winner6 BYTE "    $$ |  \$$$$$$  |\$$$$$$  |      \$$$$$\$$$$  |\$$$$$$  |$$ |  $$ |", 0
	   24 20 7C 20 20
	   5C 24 24 24 24
	   24 24 20 20 7C
	   5C 24 24 24 24
	   24 24 20 20 7C
	   20 20 20 20 20
	   20 5C 24 24 24
	   24 24 5C 24 24
	   24 24 20 20 7C
	   5C 24 24 24 24
	   24 24 20 20 7C
	   24 24 20 7C 20
	   20 24 24 20 7C
	   00
 000001F1 20 20 20 20 5C	winner7 BYTE "    \__|   \______/  \______/        \_____\____/  \______/ \__|  \__|", 0
	   5F 5F 7C 20 20
	   20 5C 5F 5F 5F
	   5F 5F 5F 2F 20
	   20 5C 5F 5F 5F
	   5F 5F 5F 2F 20
	   20 20 20 20 20
	   20 20 5C 5F 5F
	   5F 5F 5F 5C 5F
	   5F 5F 5F 2F 20
	   20 5C 5F 5F 5F
	   5F 5F 5F 2F 20
	   5C 5F 5F 7C 20
	   20 5C 5F 5F 7C
	   00




 00000238 20 5F 5F 5F 20	wordy 	BYTE " ___       __   ________  ________  ________  ___       _______      ",0
	   20 20 20 20 20
	   20 5F 5F 20 20
	   20 5F 5F 5F 5F
	   5F 5F 5F 5F 20
	   20 5F 5F 5F 5F
	   5F 5F 5F 5F 20
	   20 5F 5F 5F 5F
	   5F 5F 5F 5F 20
	   20 5F 5F 5F 20
	   20 20 20 20 20
	   20 5F 5F 5F 5F
	   5F 5F 5F 20 20
	   20 20 20 20 00
 0000027E 7C 5C 20 20 5C	wordy1	BYTE "|\  \     |\  \|\   __  \|\   __  \|\   ___ \|\  \     |\  ___ \     ",0
	   20 20 20 20 20
	   7C 5C 20 20 5C
	   7C 5C 20 20 20
	   5F 5F 20 20 5C
	   7C 5C 20 20 20
	   5F 5F 20 20 5C
	   7C 5C 20 20 20
	   5F 5F 5F 20 5C
	   7C 5C 20 20 5C
	   20 20 20 20 20
	   7C 5C 20 20 5F
	   5F 5F 20 5C 20
	   20 20 20 20 00
 000002C4 5C 20 5C 20 20	wordy2	BYTE "\ \  \    \ \  \ \  \|\  \ \  \|\  \ \  \_|\ \ \  \    \ \   __/|    ",0
	   5C 20 20 20 20
	   5C 20 5C 20 20
	   5C 20 5C 20 20
	   5C 7C 5C 20 20
	   5C 20 5C 20 20
	   5C 7C 5C 20 20
	   5C 20 5C 20 20
	   5C 5F 7C 5C 20
	   5C 20 5C 20 20
	   5C 20 20 20 20
	   5C 20 5C 20 20
	   20 5F 5F 2F 7C
	   20 20 20 20 00
 0000030A 20 5C 20 5C 20	wordy3	BYTE " \ \  \  __\ \  \ \  \\\  \ \   _  _\ \  \ \\ \ \  \    \ \  \_|/__  ",0
	   20 5C 20 20 5F
	   5F 5C 20 5C 20
	   20 5C 20 5C 20
	   20 5C 5C 5C 20
	   20 5C 20 5C 20
	   20 20 5F 20 20
	   5F 5C 20 5C 20
	   20 5C 20 5C 5C
	   20 5C 20 5C 20
	   20 5C 20 20 20
	   20 5C 20 5C 20
	   20 5C 5F 7C 2F
	   5F 5F 20 20 00
 00000350 20 20 5C 20 5C	wordy4	BYTE "  \ \  \|\__\_\  \ \  \\\  \ \  \\  \\ \  \_\\ \ \  \____\ \  \_|\ \ ",0
	   20 20 5C 7C 5C
	   5F 5F 5C 5F 5C
	   20 20 5C 20 5C
	   20 20 5C 5C 5C
	   20 20 5C 20 5C
	   20 20 5C 5C 20
	   20 5C 5C 20 5C
	   20 20 5C 5F 5C
	   5C 20 5C 20 5C
	   20 20 5C 5F 5F
	   5F 5F 5C 20 5C
	   20 20 5C 5F 7C
	   5C 20 5C 20 00
 00000396 20 20 20 5C 20	wordy5	BYTE "   \ \____________\ \_______\ \__\\ _\\ \_______\ \_______\ \_______\",0
	   5C 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5C 20
	   5C 5F 5F 5F 5F
	   5F 5F 5F 5C 20
	   5C 5F 5F 5C 5C
	   20 5F 5C 5C 20
	   5C 5F 5F 5F 5F
	   5F 5F 5F 5C 20
	   5C 5F 5F 5F 5F
	   5F 5F 5F 5C 20
	   5C 5F 5F 5F 5F
	   5F 5F 5F 5C 00
 000003DC 20 20 20 20 5C	wordy6	BYTE "    \|____________|\|_______|\|__|\|__|\|_______|\|_______|\|_______|",0
	   7C 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 7C 5C
	   7C 5F 5F 5F 5F
	   5F 5F 5F 7C 5C
	   7C 5F 5F 7C 5C
	   7C 5F 5F 7C 5C
	   7C 5F 5F 5F 5F
	   5F 5F 5F 7C 5C
	   7C 5F 5F 5F 5F
	   5F 5F 5F 7C 5C
	   7C 5F 5F 5F 5F
	   5F 5F 5F 7C 00

 00000422 5F 5F 5F 5F 20	nomaidens  BYTE "____    ____  ______    __    __     __        ______        _______.___________.", 0
	   20 20 20 5F 5F
	   5F 5F 20 20 5F
	   5F 5F 5F 5F 5F
	   20 20 20 20 5F
	   5F 20 20 20 20
	   5F 5F 20 20 20
	   20 20 5F 5F 20
	   20 20 20 20 20
	   20 20 5F 5F 5F
	   5F 5F 5F 20 20
	   20 20 20 20 20
	   20 5F 5F 5F 5F
	   5F 5F 5F 2E 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   2E 00
 00000474 5C 20 20 20 5C	nomaidens1 BYTE "\   \  /   / /  __  \  |  |  |  |   |  |      /  __  \      /       |           |", 0
	   20 20 2F 20 20
	   20 2F 20 2F 20
	   20 5F 5F 20 20
	   5C 20 20 7C 20
	   20 7C 20 20 7C
	   20 20 7C 20 20
	   20 7C 20 20 7C
	   20 20 20 20 20
	   20 2F 20 20 5F
	   5F 20 20 5C 20
	   20 20 20 20 20
	   2F 20 20 20 20
	   20 20 20 7C 20
	   20 20 20 20 20
	   20 20 20 20 20
	   7C 00
 000004C6 20 5C 20 20 20	nomaidens2 BYTE " \   \/   / |  |  |  | |  |  |  |   |  |     |  |  |  |    |   (----`---|  |----`", 0
	   5C 2F 20 20 20
	   2F 20 7C 20 20
	   7C 20 20 7C 20
	   20 7C 20 7C 20
	   20 7C 20 20 7C
	   20 20 7C 20 20
	   20 7C 20 20 7C
	   20 20 20 20 20
	   7C 20 20 7C 20
	   20 7C 20 20 7C
	   20 20 20 20 7C
	   20 20 20 28 2D
	   2D 2D 2D 60 2D
	   2D 2D 7C 20 20
	   7C 2D 2D 2D 2D
	   60 00
 00000518 20 20 5C 5F 20	nomaidens3 BYTE "  \_    _/  |  |  |  | |  |  |  |   |  |     |  |  |  |     \   \       |  |     ", 0
	   20 20 20 5F 2F
	   20 20 7C 20 20
	   7C 20 20 7C 20
	   20 7C 20 7C 20
	   20 7C 20 20 7C
	   20 20 7C 20 20
	   20 7C 20 20 7C
	   20 20 20 20 20
	   7C 20 20 7C 20
	   20 7C 20 20 7C
	   20 20 20 20 20
	   5C 20 20 20 5C
	   20 20 20 20 20
	   20 20 7C 20 20
	   7C 20 20 20 20
	   20 00
 0000056A 20 20 20 20 7C	nomaidens4 BYTE "    |  |    |  `--'  | |  `--'  |   |  `----.|  `--'  | .----)   |      |  |     ", 0
	   20 20 7C 20 20
	   20 20 7C 20 20
	   60 2D 2D 27 20
	   20 7C 20 7C 20
	   20 60 2D 2D 27
	   20 20 7C 20 20
	   20 7C 20 20 60
	   2D 2D 2D 2D 2E
	   7C 20 20 60 2D
	   2D 27 20 20 7C
	   20 2E 2D 2D 2D
	   2D 29 20 20 20
	   7C 20 20 20 20
	   20 20 7C 20 20
	   7C 20 20 20 20
	   20 00
 000005BC 20 20 20 20 7C	nomaidens5 BYTE "    |__|     \______/   \______/    |_______| \______/  |_______/       |__|     ", 0
	   5F 5F 7C 20 20
	   20 20 20 5C 5F
	   5F 5F 5F 5F 5F
	   2F 20 20 20 5C
	   5F 5F 5F 5F 5F
	   5F 2F 20 20 20
	   20 7C 5F 5F 5F
	   5F 5F 5F 5F 7C
	   20 5C 5F 5F 5F
	   5F 5F 5F 2F 20
	   20 7C 5F 5F 5F
	   5F 5F 5F 5F 2F
	   20 20 20 20 20
	   20 20 7C 5F 5F
	   7C 20 20 20 20
	   20 00

 0000060E 53 6F 72 72 79	ending 	BYTE "Sorry. The Word of the Day was: ",0 
	   2E 20 54 68 65
	   20 57 6F 72 64
	   20 6F 66 20 74
	   68 65 20 44 61
	   79 20 77 61 73
	   3A 20 00


 0000062F 4D 45 4D 45		empty BYTE "MEME"  

 00000633 0F			start_box_h BYTE 15

 00000000			.code

				; Function that checks each character in the word and displays them
				; Uses esi for the wod and edi for the word
 00000000			CheckWord PROC uses eax ecx esi edi, current_word: DWORD, wod: DWORD
					
					;use al for each individual char
 00000000  55		   *	    push   ebp
 00000001  8B EC	   *	    mov    ebp, esp
 00000003  50		   *	    push   eax
 00000004  51		   *	    push   ecx
 00000005  56		   *	    push   esi
 00000006  57		   *	    push   edi
 00000007  B9 00000005			mov ecx, 5
 0000000C  8B 75 08			mov esi, current_word
 0000000F  8B 7D 0C			mov edi, wod
 00000012				WordLoop:
 00000012  8A 06				mov al, [esi]
 00000014  FF 37				push [edi]
 00000016  FF 36				push [esi]
 00000018  E8 00000000 E			call CharInSamePos
					
 0000001D  75 07				jne NotCorrect
 0000001F  BB 00000002				mov ebx, 2
 00000024  EB 18				jmp Display

 00000026					NotCorrect:
 00000026  FF 75 0C				push wod
 00000029  FF 36				push [esi]
 0000002B  E8 00000000 E			call CharInWord
 00000030  75 07				jne Wrong
 00000032  BB 00000001				mov ebx, 1
 00000037  EB 05				jmp Display
						
 00000039					Wrong:
 00000039  BB 00000000				mov ebx, 0
					
 0000003E					Display:
 0000003E  50					push eax
 0000003F  53					push ebx
 00000040  E8 0000000C				call DisplayChar
 00000045  46					inc esi
 00000046  47					inc edi
 00000047  E2 C9				loop WordLoop

					ret 
 00000049  5F		   *	    pop    edi
 0000004A  5E		   *	    pop    esi
 0000004B  59		   *	    pop    ecx
 0000004C  58		   *	    pop    eax
 0000004D  C9		   *	    leave  
 0000004E  C2 0008	   *	    ret    00008h
 00000051			CheckWord ENDP

				; Display the character and whether the character is in the word, in the right position or not in the word
				; uses eax for color bg and esi for char
 00000051			DisplayChar PROC uses ebx eax, color_bg: BYTE, char: BYTE
 00000051  55		   *	    push   ebp
 00000052  8B EC	   *	    mov    ebp, esp
 00000054  53		   *	    push   ebx
 00000055  50		   *	    push   eax
 00000056  83 FB 00			cmp ebx, 0
 00000059  74 12			je wrong
 0000005B  83 FB 01			cmp ebx, 1
 0000005E  74 19			je inword
 00000060  50				push eax
					
 00000061				Correct:
 00000061  B8 000000AF				mov eax, white + (lightGreen * 16)
 00000066  E8 00000000 E			call SetTextColor
 0000006B  EB 16				jmp print
 0000006D				Wrong:
 0000006D  B8 0000007F				mov eax, white + (lightGray * 16)
 00000072  E8 00000000 E			call SetTextColor
 00000077  EB 0A				jmp print
 00000079				InWord:
 00000079  B8 000000BF				mov eax, white + (lightCyan * 16)
 0000007E  E8 00000000 E			call SetTextColor
 00000083				Print:
 00000083  58					pop eax
 00000084  E8 00000000 E			call WriteChar
 00000089  80 C2 01				add DL, 1
 0000008C  80 C6 00				add DH, 0
 0000008F  E8 00000000 E			call GotoXY
 00000094  B8 000000F0				mov eax, black + (white * 16)
 00000099  E8 00000000 E			call SetTextColor
						ret 
 0000009E  58		   *	    pop    eax
 0000009F  5B		   *	    pop    ebx
 000000A0  C9		   *	    leave  
 000000A1  C2 0008	   *	    ret    00008h

 000000A4			DisplayChar ENDP
graphics.asm(116) : warning A6004:procedure argument or local not referenced : color_bg
graphics.asm(116) : warning A6004:procedure argument or local not referenced : char

				; Setup display to set background color and move cursor to the right position
 000000A4			SetDisplay PROC uses eax
					
 000000A4  50		   *	    push   eax
 000000A5  B8 000000F8			mov eax, gray + (white * 16)
 000000AA  E8 00000000 E		call SetTextColor

 000000AF  E8 00000000 E		call Clrscr
 000000B4  B6 05			mov DH, 5
 000000B6  B2 14			mov DL, 20
 000000B8  E8 00000000 E		call GotoXY

 000000BD  E8 000001BC			call Wordle
					
 000000C2  B6 0F			mov DH, 15
 000000C4  B2 32		    mov DL, 50
 000000C6  E8 00000000 E	    call    GotoXY

 000000CB  B8 00000088			mov eax, gray + (gray * 16)
 000000D0  E8 00000000 E		call SetTextColor

 000000D5  BE 00000000			mov esi, 0
 000000DA  B9 00000006			mov ecx, 6
 000000DF  80 EE 01			sub DH, 1
					
 000000E2				BoxLoop:
 000000E2  B8 00000088				mov eax, gray + (gray * 16)
 000000E7  E8 00000000 E			call SetTextColor
 000000EC  52					push edx

 000000ED  BA 0000062F R			mov edx, OFFSET empty
 000000F2  E8 00000000 E			call WriteString
 000000F7  BA 00000000				mov edx, 0

 000000FC  5A					pop edx
 000000FD  B8 000000FF				mov eax, white + (white * 16)
 00000102  E8 00000000 E			call SetTextColor

 00000107  80 C6 01				add DH, 1
 0000010A  B2 32				mov DL, 50
 0000010C  E8 00000000 E			call GotoXY

 00000111  46					inc esi
 00000112  E2 CE				loop BoxLoop
					
 00000114  B6 0F			mov DH, 15
 00000116  B2 32			mov DL, 50
 00000118  E8 00000000 E		call GotoXY

					ret
 0000011D  58		   *	    pop    eax
 0000011E  C3		   *	    ret    00000h

 0000011F			SetDisplay ENDP



 0000011F			Winner PROC
 0000011F  B8 000000FF			mov eax, white + (white * 16)
 00000124  E8 00000000 E		call SetTextColor
 00000129  E8 00000000 E		call ClrScr

 0000012E  B8 000000F2			mov eax, green + (white * 16)
 00000133  E8 00000000 E		call SetTextColor

 00000138  B6 05			mov DH, 5
 0000013A  B2 14			mov DL, 20
 0000013C  E8 00000000 E		call GotoXY

 00000141  BA 00000000 R		mov edx, OFFSET winners
 00000146  E8 00000000 E		call WriteString

 0000014B  B6 06			mov DH, 6
 0000014D  B2 14			mov DL, 20
 0000014F  E8 00000000 E		call GotoXY

 00000154  BA 00000047 R		mov edx, OFFSET winner1
 00000159  E8 00000000 E		call WriteString

 0000015E  B6 07			mov DH, 7
 00000160  B2 14			mov DL, 20
 00000162  E8 00000000 E		call GotoXY

 00000167  BA 0000008E R		mov edx, OFFSET winner2
 0000016C  E8 00000000 E		call WriteString
					
 00000171  B6 08			mov DH, 8
 00000173  B2 14			mov DL, 20
 00000175  E8 00000000 E		call GotoXY

 0000017A  BA 000000D5 R		mov edx, OFFSET winner3
 0000017F  E8 00000000 E		call WriteString
					
 00000184  B6 09			mov DH, 9
 00000186  B2 14			mov DL, 20
 00000188  E8 00000000 E		call GotoXY

 0000018D  BA 0000011C R		mov edx, OFFSET winner4
 00000192  E8 00000000 E		call WriteString

 00000197  B6 0A			mov DH, 10
 00000199  B2 14			mov DL, 20
 0000019B  E8 00000000 E		call GotoXY

 000001A0  BA 00000163 R		mov edx, OFFSET winner5
 000001A5  E8 00000000 E		call WriteString

 000001AA  B6 0B			mov DH, 11
 000001AC  B2 14			mov DL, 20
 000001AE  E8 00000000 E		call GotoXY

 000001B3  BA 000001AA R		mov edx, OFFSET winner6
 000001B8  E8 00000000 E		call WriteString


 000001BD  B6 0C			mov DH, 12
 000001BF  B2 14			mov DL, 20
 000001C1  E8 00000000 E		call GotoXY

 000001C6  BA 000001F1 R		mov edx, OFFSET winner7
 000001CB  E8 00000000 E		call WriteString

 000001D0  C3				ret
					
 000001D1			Winner ENDP

 000001D1			Loser PROC, wod: DWORD
 000001D1  55		   *	    push   ebp
 000001D2  8B EC	   *	    mov    ebp, esp
 000001D4  B8 000000FF			mov eax, white + (white * 16)
 000001D9  E8 00000000 E		call SetTextColor
 000001DE  E8 00000000 E		call ClrScr

 000001E3  B8 000000FC			mov eax, lightRed + (white * 16)
 000001E8  E8 00000000 E		call SetTextColor

 000001ED  B6 05			mov DH, 5
 000001EF  B2 14			mov DL, 20
 000001F1  E8 00000000 E		call GotoXY

 000001F6  BA 00000422 R		mov edx, OFFSET nomaidens
 000001FB  E8 00000000 E		call WriteString

 00000200  B6 06			mov DH, 6
 00000202  B2 14			mov DL, 20
 00000204  E8 00000000 E		call GotoXY

 00000209  BA 00000474 R		mov edx, OFFSET nomaidens1
 0000020E  E8 00000000 E		call WriteString

 00000213  B6 07			mov DH, 7
 00000215  B2 14			mov DL, 20
 00000217  E8 00000000 E		call GotoXY

 0000021C  BA 000004C6 R		mov edx, OFFSET nomaidens2
 00000221  E8 00000000 E		call WriteString
					
 00000226  B6 08			mov DH, 8
 00000228  B2 14			mov DL, 20
 0000022A  E8 00000000 E		call GotoXY

 0000022F  BA 00000518 R		mov edx, OFFSET nomaidens3
 00000234  E8 00000000 E		call WriteString
					
 00000239  B6 09			mov DH, 9
 0000023B  B2 14			mov DL, 20
 0000023D  E8 00000000 E		call GotoXY

 00000242  BA 0000056A R		mov edx, OFFSET nomaidens4
 00000247  E8 00000000 E		call WriteString

 0000024C  B6 0A			mov DH, 10
 0000024E  B2 14			mov DL, 20
 00000250  E8 00000000 E		call GotoXY

 00000255  BA 000005BC R		mov edx, OFFSET nomaidens5
 0000025A  E8 00000000 E		call WriteString

 0000025F  B6 14			mov DH, 20
 00000261  B2 28			mov DL, 40
 00000263  E8 00000000 E		call GotoXY

 00000268  BA 0000060E R		mov edx, OFFSET ending
 0000026D  E8 00000000 E		call WriteString
 00000272  8B 55 08			mov edx, wod
 00000275  E8 00000000 E		call WriteString

					ret
 0000027A  C9		   *	    leave  
 0000027B  C2 0004	   *	    ret    00004h

 0000027E			Loser ENDP


 0000027E			Wordle PROC
 0000027E  B8 000000FD			mov eax, lightMagenta + (white * 16)
 00000283  E8 00000000 E		call SetTextColor

					
 00000288  BA 00000238 R		mov edx, OFFSET wordy
 0000028D  E8 00000000 E		call WriteString
					

 00000292  B6 06			mov DH, 6
 00000294  B2 14			mov DL, 20
 00000296  E8 00000000 E		call GotoXY

 0000029B  BA 0000027E R		mov edx, OFFSET wordy1
 000002A0  E8 00000000 E		call WriteString
					

 000002A5  B6 07			mov DH, 7
 000002A7  B2 14			mov DL, 20
 000002A9  E8 00000000 E		call GotoXY

 000002AE  BA 000002C4 R		mov edx, OFFSET wordy2
 000002B3  E8 00000000 E		call WriteString
					

 000002B8  B6 08			mov DH, 8
 000002BA  B2 14			mov DL, 20
 000002BC  E8 00000000 E		call GotoXY

 000002C1  BA 0000030A R		mov edx, OFFSET wordy3
 000002C6  E8 00000000 E		call WriteString
					

 000002CB  B6 09			mov DH, 9
 000002CD  B2 14			mov DL, 20
 000002CF  E8 00000000 E		call GotoXY

 000002D4  BA 00000350 R		mov edx, OFFSET wordy4
 000002D9  E8 00000000 E		call WriteString


 000002DE  B6 0A			mov DH, 10
 000002E0  B2 14			mov DL, 20
 000002E2  E8 00000000 E		call GotoXY

 000002E7  BA 00000396 R		mov edx, OFFSET wordy5
 000002EC  E8 00000000 E		call WriteString


 000002F1  B6 0B			mov DH, 11
 000002F3  B2 14			mov DL, 20
 000002F5  E8 00000000 E		call GotoXY

 000002FA  BA 000003DC R		mov edx, OFFSET wordy6
 000002FF  E8 00000000 E		call WriteString
					

 00000304  B6 0C			mov DH, 12
 00000306  B2 14			mov DL, 20
 00000308  E8 00000000 E		call GotoXY

 0000030D  C3				ret

 0000030E			Wordle ENDP



				END
Microsoft (R) Macro Assembler Version 14.29.30140.0	    04/05/22 07:46:36
graphics.asm						     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000634 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 0000030E Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CharInSamePos  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CharInWord . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CheckWord  . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000051 Public STDCALL
  current_word . . . . . . . . .	DWord	 bp + 00000008
  wod  . . . . . . . . . . . . .	DWord	 bp + 0000000C
  WordLoop . . . . . . . . . . .	L Near	 00000012 _TEXT	
  NotCorrect . . . . . . . . . .	L Near	 00000026 _TEXT	
  Wrong  . . . . . . . . . . . .	L Near	 00000039 _TEXT	
  Display  . . . . . . . . . . .	L Near	 0000003E _TEXT	
CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DisplayChar  . . . . . . . . . .	P Near	 00000051 _TEXT	Length= 00000053 Public STDCALL
  color_bg . . . . . . . . . . .	Byte	 bp + 00000008
  char . . . . . . . . . . . . .	Byte	 bp + 0000000C
  Correct  . . . . . . . . . . .	L Near	 00000061 _TEXT	
  Wrong  . . . . . . . . . . . .	L Near	 0000006D _TEXT	
  InWord . . . . . . . . . . . .	L Near	 00000079 _TEXT	
  Print  . . . . . . . . . . . .	L Near	 00000083 _TEXT	
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Loser  . . . . . . . . . . . . .	P Near	 000001D1 _TEXT	Length= 000000AD Public STDCALL
  wod  . . . . . . . . . . . . .	DWord	 bp + 00000008
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SelectRandomWord . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetDisplay . . . . . . . . . . .	P Near	 000000A4 _TEXT	Length= 0000007B Public STDCALL
  BoxLoop  . . . . . . . . . . .	L Near	 000000E2 _TEXT	
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Winner . . . . . . . . . . . . .	P Near	 0000011F _TEXT	Length= 000000B2 Public STDCALL
Wordle . . . . . . . . . . . . .	P Near	 0000027E _TEXT	Length= 00000090 Public STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
cyan . . . . . . . . . . . . . .	Number	 00000003h   
empty  . . . . . . . . . . . . .	Byte	 0000062F _DATA	
ending . . . . . . . . . . . . .	Byte	 0000060E _DATA	
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
nomaidens1 . . . . . . . . . . .	Byte	 00000474 _DATA	
nomaidens2 . . . . . . . . . . .	Byte	 000004C6 _DATA	
nomaidens3 . . . . . . . . . . .	Byte	 00000518 _DATA	
nomaidens4 . . . . . . . . . . .	Byte	 0000056A _DATA	
nomaidens5 . . . . . . . . . . .	Byte	 000005BC _DATA	
nomaidens  . . . . . . . . . . .	Byte	 00000422 _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
start_box_h  . . . . . . . . . .	Byte	 00000633 _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
winner1  . . . . . . . . . . . .	Byte	 00000047 _DATA	
winner2  . . . . . . . . . . . .	Byte	 0000008E _DATA	
winner3  . . . . . . . . . . . .	Byte	 000000D5 _DATA	
winner4  . . . . . . . . . . . .	Byte	 0000011C _DATA	
winner5  . . . . . . . . . . . .	Byte	 00000163 _DATA	
winner6  . . . . . . . . . . . .	Byte	 000001AA _DATA	
winner7  . . . . . . . . . . . .	Byte	 000001F1 _DATA	
winners  . . . . . . . . . . . .	Byte	 00000000 _DATA	
wordlist . . . . . . . . . . . .	Byte	 00000000 FLAT	External STDCALL
wordy1 . . . . . . . . . . . . .	Byte	 0000027E _DATA	
wordy2 . . . . . . . . . . . . .	Byte	 000002C4 _DATA	
wordy3 . . . . . . . . . . . . .	Byte	 0000030A _DATA	
wordy4 . . . . . . . . . . . . .	Byte	 00000350 _DATA	
wordy5 . . . . . . . . . . . . .	Byte	 00000396 _DATA	
wordy6 . . . . . . . . . . . . .	Byte	 000003DC _DATA	
wordy  . . . . . . . . . . . . .	Byte	 00000238 _DATA	
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   2 Warnings
	   0 Errors
